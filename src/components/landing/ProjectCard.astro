---
import type { Project } from "../../types/project";

interface Props {
  project: Project;
}

const getProjectStatus = (status: string) => {
  if (status === "completed") return "Completed";
  if (status === "in-progress") return "In Progress";
  if (status === "not-started") return "Not Started";
};

const { project } = Astro.props as Props;
---

<div class={`project ${project.status}`}>
  <span class="project-header">
    <h3 class="project-title heading-3">{project.title}</h3>

    <a href={project.link} target="_blank">
      <img
        src="/icons/web_link.svg"
        alt="Web Search"
        title={project.linkText}
      />

      <p class="heading-4">{project.linkText}</p>
    </a>
  </span>

  <p class="heading-4">{project.description}</p>
  <div class="project-status">
    <div class={`project-status-dot ${project.status}`}></div>
    <p class="heading-4">{getProjectStatus(project.status)}</p>
  </div>
</div>

<style>
  .project {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    background-color: #111;
    padding: 2rem;
    border-radius: 5px;
    border: 1px solid transparent;
    transition: border 0.2s ease-in-out;
  }

  .project:hover,
  .project.active {
    border: 1px solid #f80;

    & a {
      background-color: #784a15;
    }

    .project-title::after {
      width: 85%;
    }
  }

  .project-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
  }

  .project-title {
    position: relative;
    overflow: hidden;
    color: #f80;

    &::after {
      content: "";
      position: absolute;
      bottom: 0;
      left: 0;
      width: 0;
      height: 3px;
      background-color: #784a15;
      transition: width 0.2s ease-in-out;
    }
  }

  .project-header a {
    display: flex;
    align-items: center;
    gap: 1rem;
    border: 1px solid transparent;
    padding: 6px 18px;
    border-radius: 8px;
    transition: background-color 0.2s ease-in-out;
    cursor: pointer;
  }

  .project-header img {
    width: 2rem;
    height: 2rem;
  }

  .project.completed {
    background-color: hsla(156, 100%, 2%, 1);
  }

  .project.in-progress {
    background-color: hsla(195, 68%, 4%, 1);
  }

  .project.not-started {
    background-color: hsla(13, 43%, 4%, 1);
  }

  .project-status {
    display: flex;
    align-items: center;
    gap: 1rem;
  }

  .project-status-dot {
    width: 1rem;
    height: 1rem;
    border-radius: 50%;
  }

  .project-status-dot.completed {
    background-color: #0f0;
  }

  .project-status-dot.in-progress {
    background-color: #3291ff;
  }

  .project-status-dot.not-started {
    background-color: #f80;
  }

  @media (max-width: 768px) {
    .project {
      flex-direction: column;
      align-items: flex-start;
      padding: 1rem;
    }

    .project-header {
      width: 100%;
      flex-direction: column;
      gap: 1rem;
    }

    .project-title {
      font-size: 24px !important;
    }

    .project-header a {
      background-color: #784a15;
    }

    .project-status {
      margin-top: 0.5rem;
      width: 100%;
      justify-content: flex-start;
    }
  }

  @media (max-width: 480px) {
    .project {
      padding: 0.75rem;
    }

    .project-header img {
      width: 1.5rem;
      height: 1.5rem;
    }

    .project-status-dot {
      width: 0.75rem;
      height: 0.75rem;
    }
  }
</style>
