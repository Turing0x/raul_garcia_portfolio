---
import { useTranslations } from "../i18n/utils";
import type { Lang } from "../types/lang";

const currentLang = Astro.currentLocale as Lang;
const transtaledLabels = useTranslations(currentLang);
---

<button id="scroll-progress-btn" class="scroll-btn large">
  <span>{transtaledLabels("document.scroll-btn")}</span>
  <img class="arrow-down" src="/icons/arrow_down.svg" alt="arrow down" />
</button>

<style>
  .scroll-btn {
    --btn-background: #1c4353;
    --transition-timing: 0.2s ease-in-out;

    display: flex;
    align-items: center;
    justify-content: center;
    position: fixed;
    bottom: 2rem;
    right: 2rem;
    color: #e2e2e2;
    background: var(--btn-background);
    border: none;
    z-index: 100;
    overflow: hidden;
    transition:
      transform var(--transition-timing),
      width var(--transition-timing),
      height var(--transition-timing),
      border-radius var(--transition-timing),
      font-size var(--transition-timing),
      gap var(--transition-timing),
      padding var(--transition-timing);
  }

  .scroll-btn.short {
    --btn-size: 4rem;
    width: var(--btn-size);
    height: var(--btn-size);
    border-radius: 50%;
    cursor: pointer;
  }

  .scroll-btn.large {
    --btn-padding: 6px 18px;
    gap: 1rem;
    border-radius: 0.2rem;
    padding: var(--btn-padding);
    font-size: 1.2rem;
    pointer-events: none;
  }

  .scroll-btn::before {
    content: "";
    position: absolute;
    inset: 0;
    border-radius: 50%;
    padding: 2px;
    background: conic-gradient(#f80 var(--progress, 0%), transparent 0);
    -webkit-mask:
      linear-gradient(#fff 0 0) content-box,
      linear-gradient(#fff 0 0);
    mask:
      linear-gradient(#fff 0 0) content-box,
      linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
  }

  .scroll-btn img {
    color: #f80;
    font-size: 1.5rem;
    position: relative;
    width: 24px;
    height: 24px;
    z-index: 1;
  }

  .arrow-down {
    animation: bounce 1s infinite;
  }

  @keyframes bounce {
    0%,
    100% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(-2px);
    }
  }

  @media (max-width: 768px) {
    .scroll-btn {
      display: none;
    }
  }
</style>

<script>
  const btn = document.getElementById("scroll-progress-btn");

  const calculateScrollProgress = () => {
    const windowHeight =
      document.documentElement.scrollHeight - window.innerHeight;
    const scrolled = window.scrollY;
    const progress = (scrolled / windowHeight) * 100;
    return Math.min(progress, 100);
  };

  const updateProgress = () => {
    if (btn) {
      const progress = calculateScrollProgress();
      btn.style.setProperty("--progress", `${progress}%`);

      if (progress > 0) {
        btn.classList.remove("large");
        btn.classList.add("short");

        btn.innerHTML = `<img src="/icons/arrow_up.svg" alt="arrow up" />`;
      } else {
        btn.classList.remove("short");
        btn.classList.add("large");

        btn.innerHTML = `
        <span>Scroll Down</span>
        <img class="arrow-down" src="/icons/arrow_down.svg" alt="arrow down" />
        `;
      }
    }
  };

  const scrollToTop = () => {
    window.scrollTo({
      top: 0,
      behavior: "smooth",
    });
  };

  // Event listeners
  window.addEventListener("scroll", updateProgress);
  btn?.addEventListener("click", scrollToTop);
</script>
